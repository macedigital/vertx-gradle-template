# E.g. your domain name
modowner=com.mycompany

# Your module name
modname=my-module

# Your module version
version=0.0.1

# The test timeout in seconds
testtimeout=300

# Set to true if you want module dependencies to be pulled in and nested inside the module itself
pullInDeps=true

# Set to true if you want the build to output a jar as well as a module zip file
produceJar=true

# Set to true if you want to build a fat executable jar containing everything needed to run the module
createFatJar=false

# The version of Groovy language to compile against (if you are using Groovy compiled verticles or VertxTests)
groovyLangModVersion=2.1.0-final

# The version of Groovy to use (if you are using Groovy)
groovyVersion=2.3.3

# The version of Scala language to compile against (if you are using Scala compiled verticles or VertxTests)
scalaLangModVersion=1.0.0

# The version of Scala to use (if you are using Scala)
scalaVersion=2.11.1

# The version of Clojure language to compile against (if you are using Clojure compiled verticles or VertxTests)
clojureLangModVersion=1.0.2

# The version of Clojure to use (if you are using Clojure)
clojureVersion=1.6.0

# The version of Jython language to compile against (if you are using Jython compiled verticles or VertxTests)
jythonLangModVersion=2.1.1

# The version of Jython to use (if you are using Jython)
jythonVersion=2.5.3

# The version of JRuby language to compile against (if you are using JRuby compiled verticles or VertxTests)
jrubyLangModVersion=2.1.0-final

# The version of JRuby to use (if you are using JRuby)
jrubyVersion=1.7.13


# Gradle version
gradleVersion=2.2

# The version of Vert.x
vertxVersion=2.1.2

# The version of Vert.x test tools
toolsVersion=2.0.3-final

# The version of JUnit
junitVersion=4.10

# Command line arguments to use when running any of the variations of ./gradlew runMod
# These are the exact same command line args that you would pass to 'vertx runmod <module-name>' on the command line
runModArgs=-conf conf.json

# e.g.
# runModArgs=-conf foo.json
# runModArgs=-conf someconf.json -ha
# runModArgs=-cluster
